<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.7</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.demo.rabbitmq</groupId>
	<artifactId>rabbitmq-practices</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>rabbitmq-practices</name>
	<description>rabbitmq-practices</description>
	<packaging>pom</packaging>
	<properties>
		<java.version>11</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<modules>
		<module>01-rabbitmq-java-plain</module>
		<module>20-fixed-rate-producer</module>
		<module>20-fixed-rate-consumer</module>
		<module>21-fixed-rate-producer-concurrency</module>
		<module>21-fixed-rate-consumer-concurrency</module>
		<module>22-fanout-procuder</module>
		<module>22-fanout-consumer</module>
		<module>23-direct-producer</module>
		<module>23-direct-consumer</module>
		<module>24-topic-producer</module>
		<module>24-topic-consumer</module>
		<module>25-header-producer</module>
		<module>25-header-consumer</module>
		<module>26-consumer-exception-without-DLX-producer</module>
		<module>26-consumer-exception-without-DLX-consumer</module>
		<module>27-dlx-handle-exception-producer</module>
		<module>27-dlx-handle-exception-consumer</module>
		<module>28-dlx-handle-exception-manual-ack-reject-producer</module>
		<module>28-dlx-handle-exception-manual-ack-reject-consumer</module>
		<module>30-send-dlx-to-ttl-queue</module>
		<module>30-publish-dlx-to-ttl-producer</module>
		<module>30-send-ttl-to-dlx-producer</module>
		<module>30-send-ttl-to-dlx-consumer</module>
		<module>31-handle-retry-dlx-ttl-manually-consumer</module>
		<module>31-handle-retry-dlx-ttl-manually-producer</module>
		<module>32-handle-fanout-retry-dlx-ttl-manually-producer</module>
		<module>32-handle-fanout-retry-dlx-ttl-manually-consumer</module>
		<module>33-spring-handle-retry-dlx-ttl-manually-consumer</module>
		<module>33-spring-handle-retry-dlx-ttl-manually-producer</module>
		<module>34-spring-handle-fanout-retry-dlx-ttl-manually-consumer</module>
		<module>34-spring-handle-fanout-retry-dlx-ttl-manually-producer</module>
		<module>35-spring-jakson-converter-in-rabbitMQ-producer</module>
		<module>35-spring-jakson-converter-in-rabbitMQ-consumer</module>
		<module>35-spring-jackson-converter-in-rabbitMQ-producer</module>
		<module>35-spring-jackson-converter-in-rabbitMQ-consumer</module>
		<module>36-spring-rabbitMQ-scheduling-producer</module>
		<module>36-spring-rabbitMQ-scheduling-consumer</module>
		<module>37-consumer-prefetch-producer</module>
		<module>37-consumer-prefetch-consumer</module>
		<module>38-multiple-consumer-prefetch-producer</module>
		<module>38-multiple-consumer-prefetch-consumer</module>
		<module>39-one-queue-against-multiple-message-types-consumer</module>
		<module>39-one-queue-against-multiple-message-types-producer</module>
		<module>40-consistence-hash-exchange-producer</module>
	</modules>
</project>
